# -*- coding: utf-8 -*-
"""Stock prediction using ML.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15Lh-9y2dVtUfsGAaM3x7MDOzgtMVqjic
"""

# Description : This program predicts the price of coca-cola(K0) stock for a specific dat using machine learning algorithms

#Import the libraries
from sklearn.svm import SVR
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
#plt.style.use('fivethirthyeight')

#Load the data
from google.colab import files
files.upload()

#Store the data
df=pd.read_csv('KO_Stock.csv')

#Show the data
df

# Show and store the last row of data

actual_price=df.tail(1)

#Show the data
actual_price

#Get all the data except the last row
df=df.head(len(df)-1)

#show the data set
df

# Create empty lists
days=list()
adj_close_prices=list()

#Get only the date and the adjusted close prices 
df_days=df.loc[:, 'Date']
df_adj_close=df.loc[:, 'Adj Close']

#Create the independent data set (dates)
 for day in df_days:
   days.append([int(dat.split('-')[2])])
#Create the dependent data set (adj close prices)
for adj_close_price in df_adj_close
  adj_close_prices.append(float(adj_close_price))

#Show the days
days

#Show the adj_close_prices
adj_close_prices

# Create 3 models
lin_svr=SVR(kernel='linear', C=1000)
lin-svr.fit(days, adf_clse_prices)

poly_svr=(kernel='poly', C=1000, degree=2)
poly_svr.fit(days, adj_close_prices)

rbf_svr=SVR(kernel='rbf', C=1000.0, gamma=0.85)
rbf_svr.fit(days, adj_close_prices)

#Plot the models
plt.figure(figsize=(16,8))
plt.scatter(days, adj_close_prices, color='black', label='Data'
plt.plot(days, rbf_svr.predict(days), color='green', label='RBF Model')
plt.plot(days, poly_svr.predict(days), color='orange', label='Polynomial Model')
plt.plot(days, lin_svr.predict(days), color='blue', label='Linear Model')
plt.xlabel('Days')
plt.ylabel('Adj Close Price ($)')
plt.legend()
plt.show()

#Show the predicted price for a given day
day= [[30]]
print('The RBF SVR predicted price:', rbf_svr.predict(day))
print('The Linear SVR predicted price:', line_svr.predict(day))
print('The Polynomial SVR predicted price', poly_svr.predict(day))

#Show the actual price
print('The actual price:', actual_price['Adj Close'][21])

# Below is more excess information

import quandl
data = quandl.get_table('ZACKS/FC', ticker='AAPL')

!pip install quandl



p=10
print('Sucks:', p)